{"name":"Play-example-postgresql","tagline":"Sample system illustrating Play, PostgreSQL, EBean, and Heroku","body":"# play-example-postgresql\r\n\r\nThis application illustrates how to configure Play to access a PostgreSQL database, as well as how to deploy it to Heroku.  The functionality is simple: the application creates a PostgreSQL table called `page_retrieval` containing two columns: an Id and a timestamp.  A new row is added to the database each time the home page of the application is retrieved.   Thus, the size of the table indicates the number of times the home page has been retrieved, and that value is printed to the home page each time it is accessed:\r\n\r\n![screenshot](https://raw.githubusercontent.com/ics-software-engineering/play-example-postgresql/master/doc/play-example-postgresql-home-page.png)\r\n\r\nHere are the steps required to run this application:\r\n\r\n\r\n#### 1. Install PostgreSQL.\r\n\r\nDownload and install a local copy of [PostgreSQL](http://www.postgresql.org/).  Play-example-postgresql was tested with PostgreSQL 9.3 (since that is the current version used by Heroku by default).  Later versions of PostgreSQL may still work.\r\n\r\nTo test that your PostgreSQL installation was successful, you should be able to run psql from the command line and list the currently installed databases as follows:\r\n\r\n```Shell\r\n[~/]-> psql\r\npsql (9.3.5)\r\nType \"help\" for help.\r\n\r\njohnson=# \\l\r\n                                       List of databases\r\n          Name           |  Owner  | Encoding |   Collate   |    Ctype    |  Access privileges  \r\n-------------------------+---------+----------+-------------+-------------+---------------------\r\n johnson                 | johnson | UTF8     | en_US.UTF-8 | en_US.UTF-8 | \r\n postgres                | johnson | UTF8     | en_US.UTF-8 | en_US.UTF-8 | \r\n template0               | johnson | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/johnson         +\r\n                         |         |          |             |             | johnson=CTc/johnson\r\n template1               | johnson | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/johnson         +\r\n                         |         |          |             |             | johnson=CTc/johnson\r\n(4 rows)\r\n\r\njohnson=# \\q\r\n[~/]-> \r\n```\r\n#### 2. Create a database called play\\_example\\_postgresql\r\n\r\nThis application makes a JDBC connection to a local database called play\\_example\\_postgresql, as shown [here](https://github.com/ics-software-engineering/play-example-postgres/blob/master/conf/application.conf#L42).\r\n\r\nSo, you need to create this database in your local PostgreSQL server.  A simple approach is to use psql: \r\n\r\n```Shell\r\n[~/]-> psql\r\npsql (9.3.5)\r\nType \"help\" for help.\r\n\r\njohnson=# create database play_example_postgresql ;\r\nCREATE DATABASE\r\njohnson=# \\l\r\n                                       List of databases\r\n          Name           |  Owner  | Encoding |   Collate   |    Ctype    |  Access privileges  \r\n-------------------------+---------+----------+-------------+-------------+---------------------\r\n johnson                 | johnson | UTF8     | en_US.UTF-8 | en_US.UTF-8 | \r\n play_example_postgresql | johnson | UTF8     | en_US.UTF-8 | en_US.UTF-8 | \r\n postgres                | johnson | UTF8     | en_US.UTF-8 | en_US.UTF-8 | \r\n template0               | johnson | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/johnson         +\r\n                         |         |          |             |             | johnson=CTc/johnson\r\n template1               | johnson | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/johnson         +\r\n                         |         |          |             |             | johnson=CTc/johnson\r\n(6 rows)\r\njohnson=# \\q\r\n[~/]-> \r\n```\r\n#### 3. Run the application\r\n\r\nNow run the Play application using Activator:\r\n\r\n```Shell\r\n~/projecthosting/github/play/play-example-postgresql]-> activator run\r\n[info] Loading project definition from /Users/johnson/projecthosting/github/play/play-example-postgresql/project\r\n[info] Updating {file:/Users/johnson/projecthosting/github/play/play-example-postgresql/project/}play-example-postgresql-build...\r\n[info] Resolving org.fusesource.jansi#jansi;1.4 ...\r\n[info] Done updating.\r\n[info] Set current project to play-example-postgresql (in build file:/Users/johnson/projecthosting/github/play/play-example-postgresql/)\r\n[info] Updating {file:/Users/johnson/projecthosting/github/play/play-example-postgresql/}root...\r\n[info] Resolving jline#jline;2.12 ...\r\n[info] Done updating.\r\n\r\n--- (Running the application, auto-reloading is enabled) ---\r\n\r\n[info] play - Listening for HTTP on /0:0:0:0:0:0:0:0:9000\r\n\r\n(Server started, use Ctrl+D to stop and go back to the console...)\r\n```\r\nThe application should now be accessible at [http://localhost:9000](http://localhost:9000). \r\n\r\nOnce you try to retrieve it in a browser, you should see the following additional lines printed out in the console:\r\n\r\n```Shell\r\n[info] Compiling 2 Scala sources to /Users/johnson/projecthosting/github/play/play-example-postgres/target/scala-2.11/classes...\r\n[info] play - database [default] connected at jdbc:postgresql://localhost/play_example_postgresql\r\n[info] play - Application started (Dev)\r\n```\r\n\r\n#### 4. Verify your installation\r\n\r\nTest that you have run the application successfully by retrieving the application in your browser and then refreshing the page.  You should see the counter increment in value. \r\n\r\n#### 5. Deploy to Heroku\r\n\r\nIt is quite easy to deploy this application to Heroku.  First, you must [sign up for a Heroku account](https://signup.heroku.com/www-header) and install the [Heroku toolbelt](https://toolbelt.heroku.com/).\r\n\r\nSecond, make sure this application is in the master branch of a local git repository.  If the source code is not already under git control, you can set it up quickly with the following commands in the directory containing the application:\r\n\r\n```Shell\r\n$ git init\r\n$ git add .\r\n$ git commit -m \"init\"\r\n```\r\n\r\nThird, create a new application on Heroku using `heroku create`:\r\n \r\n ```Shell\r\n $ heroku create\r\n Creating warm-frost-1289... done, stack is cedar-14\r\n http://warm-frost-1289.herokuapp.com/ | git@heroku.com:warm-frost-1289.git\r\n Git remote heroku added\r\n ```\r\n \r\n Fourth, deploy the application using `git push heroku master`:\r\n \r\n ```Shell\r\n $ git push heroku master\r\n Counting objects: 93, done.\r\n Delta compression using up to 4 threads.\r\n Compressing objects: 100% (84/84), done.\r\n Writing objects: 100% (93/93), 1017.92 KiB | 0 bytes/s, done.\r\n Total 93 (delta 38), reused 0 (delta 0)\r\n remote: Compressing source files... done.\r\n remote: Building source:\r\n remote:\r\n remote: -----> Play 2.x - Scala app detected\r\n remote: -----> Installing OpenJDK 1.8... done\r\n remote: -----> Downloading SBT... done\r\n remote: -----> Priming Ivy cache (Scala-2.11, Play-2.3)... done\r\n remote: -----> Running: sbt update\r\n ...\r\n remote: -----> Dropping ivy cache from the slug\r\n remote: -----> Dropping sbt boot dir from the slug\r\n remote: -----> Dropping compilation artifacts from the slug\r\n remote: -----> Discovering process types\r\n remote:        Procfile declares types -> web\r\n remote:\r\n remote: -----> Compressing... done, 93.3MB\r\n remote: -----> Launching... done, v6\r\n remote:        https://warm-frost-1289.herokuapp.com/ deployed to Heroku\r\n remote:\r\n remote: Verifying deploy... done.\r\n To https://git.heroku.com/warm-frost-1289.git\r\n * [new branch]      master -> master\r\n ```\r\nMore information is available in the [Deploying to Heroku](https://www.playframework.com/documentation/2.3.x/ProductionHeroku) page of the Play Framework documentation. \r\n\r\nFifth, verify your deployment by retrieving the Heroku application in your browser.  If the deployment was successful, you should be able to refresh the page and see the counter increment in value. \r\n\r\n## Screencast\r\n\r\nClick the image below to watch a six minute walkthrough of the code:\r\n\r\n<a href=\"http://youtu.be/RqmIgP5mocs\"><img width=\"600px\" src=\"https://raw.githubusercontent.com/ics-software-engineering/play-example-postgresql/master/doc/play-example-postgresql-screencast.png\"></a>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}